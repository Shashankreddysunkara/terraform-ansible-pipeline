Refreshing Terraform state in-memory prior to plan...
The refreshed state will be used to calculate this plan, but will not be
persisted to local or remote state storage.

data.aws_vpc_endpoint_service.dynamodb: Refreshing state...
data.aws_vpc_endpoint_service.s3: Refreshing state...

------------------------------------------------------------------------

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

+ module.vpc.aws_eip.nat[0]
      id:                               <computed>
      allocation_id:                    <computed>
      association_id:                   <computed>
      domain:                           <computed>
      instance:                         <computed>
      network_interface:                <computed>
      private_ip:                       <computed>
      public_ip:                        <computed>
      tags.%:                           "3"
      tags.Environment:                 "non-prod"
      tags.Name:                        "vpc-non-prod-us-east-1a"
      tags.Owner:                       "arlindo santos"
      vpc:                              "true"

  + module.vpc.aws_eip.nat[1]
      id:                               <computed>
      allocation_id:                    <computed>
      association_id:                   <computed>
      domain:                           <computed>
      instance:                         <computed>
      network_interface:                <computed>
      private_ip:                       <computed>
      public_ip:                        <computed>
      tags.%:                           "3"
      tags.Environment:                 "non-prod"
      tags.Name:                        "vpc-non-prod-us-east-1b"
      tags.Owner:                       "arlindo santos"
      vpc:                              "true"

  + module.vpc.aws_internet_gateway.this
      id:                               <computed>
      tags.%:                           "3"
      tags.Environment:                 "non-prod"
      tags.Name:                        "vpc-non-prod"
      tags.Owner:                       "arlindo santos"
      vpc_id:                           "${aws_vpc.this.id}"

  + module.vpc.aws_nat_gateway.this[0]
      id:                               <computed>
      allocation_id:                    "${element(local.nat_gateway_ips, (var.single_nat_gateway ? 0 : count.index))}"
      network_interface_id:             <computed>
      private_ip:                       <computed>
      public_ip:                        <computed>
      subnet_id:                        "${element(aws_subnet.public.*.id, (var.single_nat_gateway ? 0 : count.index))}"
      tags.%:                           "3"
      tags.Environment:                 "non-prod"
      tags.Name:                        "vpc-non-prod-us-east-1a"
      tags.Owner:                       "arlindo santos"

  + module.vpc.aws_nat_gateway.this[1]
      id:                               <computed>
      allocation_id:                    "${element(local.nat_gateway_ips, (var.single_nat_gateway ? 0 : count.index))}"
      network_interface_id:             <computed>
      private_ip:                       <computed>
      public_ip:                        <computed>
      subnet_id:                        "${element(aws_subnet.public.*.id, (var.single_nat_gateway ? 0 : count.index))}"
      tags.%:                           "3"
      tags.Environment:                 "non-prod"
      tags.Name:                        "vpc-non-prod-us-east-1b"
      tags.Owner:                       "arlindo santos"

  + module.vpc.aws_route.private_nat_gateway[0]
      id:                               <computed>
      destination_cidr_block:           "0.0.0.0/0"
      destination_prefix_list_id:       <computed>
      egress_only_gateway_id:           <computed>
      gateway_id:                       <computed>
      instance_id:                      <computed>
      instance_owner_id:                <computed>
      nat_gateway_id:                   "${element(aws_nat_gateway.this.*.id, count.index)}"
      network_interface_id:             <computed>
      origin:                           <computed>
      route_table_id:                   "${element(aws_route_table.private.*.id, count.index)}"
      state:                            <computed>

  + module.vpc.aws_route.private_nat_gateway[1]
      id:                               <computed>
      destination_cidr_block:           "0.0.0.0/0"
      destination_prefix_list_id:       <computed>
      egress_only_gateway_id:           <computed>
      gateway_id:                       <computed>
      instance_id:                      <computed>
      instance_owner_id:                <computed>
      nat_gateway_id:                   "${element(aws_nat_gateway.this.*.id, count.index)}"
      network_interface_id:             <computed>
      origin:                           <computed>
      route_table_id:                   "${element(aws_route_table.private.*.id, count.index)}"
      state:                            <computed>

  + module.vpc.aws_route.public_internet_gateway
      id:                               <computed>
      destination_cidr_block:           "0.0.0.0/0"
      destination_prefix_list_id:       <computed>
      egress_only_gateway_id:           <computed>
      gateway_id:                       "${aws_internet_gateway.this.id}"
      instance_id:                      <computed>
      instance_owner_id:                <computed>
      nat_gateway_id:                   <computed>
      network_interface_id:             <computed>
      origin:                           <computed>
      route_table_id:                   "${aws_route_table.public.id}"
      state:                            <computed>

  + module.vpc.aws_route_table.private[0]
      id:                               <computed>
      propagating_vgws.#:               <computed>
      route.#:                          <computed>
      tags.%:                           "3"
      tags.Environment:                 "non-prod"
      tags.Name:                        "vpc-non-prod-private-us-east-1a"
      tags.Owner:                       "arlindo santos"
      vpc_id:                           "${aws_vpc.this.id}"

  + module.vpc.aws_route_table.private[1]
      id:                               <computed>
      propagating_vgws.#:               <computed>
      route.#:                          <computed>
      tags.%:                           "3"
      tags.Environment:                 "non-prod"
      tags.Name:                        "vpc-non-prod-private-us-east-1b"
      tags.Owner:                       "arlindo santos"
      vpc_id:                           "${aws_vpc.this.id}"

  + module.vpc.aws_route_table.public
      id:                               <computed>
      propagating_vgws.#:               <computed>
      route.#:                          <computed>
      tags.%:                           "3"
      tags.Environment:                 "non-prod"
      tags.Name:                        "vpc-non-prod-public"
      tags.Owner:                       "arlindo santos"
      vpc_id:                           "${aws_vpc.this.id}"

  + module.vpc.aws_route_table_association.private[0]
      id:                               <computed>
      route_table_id:                   "${element(aws_route_table.private.*.id, (var.single_nat_gateway ? 0 : count.index))}"
      subnet_id:                        "${element(aws_subnet.private.*.id, count.index)}"

  + module.vpc.aws_route_table_association.private[1]
      id:                               <computed>
      route_table_id:                   "${element(aws_route_table.private.*.id, (var.single_nat_gateway ? 0 : count.index))}"
      subnet_id:                        "${element(aws_subnet.private.*.id, count.index)}"

  + module.vpc.aws_route_table_association.public[0]
      id:                               <computed>
      route_table_id:                   "${aws_route_table.public.id}"
      subnet_id:                        "${element(aws_subnet.public.*.id, count.index)}"

  + module.vpc.aws_route_table_association.public[1]
      id:                               <computed>
      route_table_id:                   "${aws_route_table.public.id}"
      subnet_id:                        "${element(aws_subnet.public.*.id, count.index)}"

  + module.vpc.aws_subnet.private[0]
      id:                               <computed>
      assign_ipv6_address_on_creation:  "false"
      availability_zone:                "us-east-1a"
      cidr_block:                       "10.10.1.0/24"
      ipv6_cidr_block:                  <computed>
      ipv6_cidr_block_association_id:   <computed>
      map_public_ip_on_launch:          "false"
      tags.%:                           "3"
      tags.Environment:                 "non-prod"
      tags.Name:                        "vpc-non-prod-private-us-east-1a"
      tags.Owner:                       "arlindo santos"
      vpc_id:                           "${aws_vpc.this.id}"

  + module.vpc.aws_subnet.private[1]
      id:                               <computed>
      assign_ipv6_address_on_creation:  "false"
      availability_zone:                "us-east-1b"
      cidr_block:                       "10.10.2.0/24"
      ipv6_cidr_block:                  <computed>
      ipv6_cidr_block_association_id:   <computed>
      map_public_ip_on_launch:          "false"
      tags.%:                           "3"
      tags.Environment:                 "non-prod"
      tags.Name:                        "vpc-non-prod-private-us-east-1b"
      tags.Owner:                       "arlindo santos"
      vpc_id:                           "${aws_vpc.this.id}"

  + module.vpc.aws_subnet.public[0]
      id:                               <computed>
      assign_ipv6_address_on_creation:  "false"
      availability_zone:                "us-east-1a"
      cidr_block:                       "10.10.11.0/24"
      ipv6_cidr_block:                  <computed>
      ipv6_cidr_block_association_id:   <computed>
      map_public_ip_on_launch:          "true"
      tags.%:                           "3"
      tags.Environment:                 "non-prod"
      tags.Name:                        "vpc-non-prod-public-us-east-1a"
      tags.Owner:                       "arlindo santos"
      vpc_id:                           "${aws_vpc.this.id}"

  + module.vpc.aws_subnet.public[1]
      id:                               <computed>
      assign_ipv6_address_on_creation:  "false"
      availability_zone:                "us-east-1b"
      cidr_block:                       "10.10.12.0/24"
      ipv6_cidr_block:                  <computed>
      ipv6_cidr_block_association_id:   <computed>
      map_public_ip_on_launch:          "true"
      tags.%:                           "3"
      tags.Environment:                 "non-prod"
      tags.Name:                        "vpc-non-prod-public-us-east-1b"
      tags.Owner:                       "arlindo santos"
      vpc_id:                           "${aws_vpc.this.id}"

  + module.vpc.aws_vpc.this
      id:                               <computed>
      assign_generated_ipv6_cidr_block: "false"
      cidr_block:                       "10.10.0.0/16"
      default_network_acl_id:           <computed>
      default_route_table_id:           <computed>
      default_security_group_id:        <computed>
      dhcp_options_id:                  <computed>
      enable_classiclink:               <computed>
      enable_classiclink_dns_support:   <computed>
      enable_dns_hostnames:             "false"
      enable_dns_support:               "true"
      instance_tenancy:                 "default"
      ipv6_association_id:              <computed>
      ipv6_cidr_block:                  <computed>
      main_route_table_id:              <computed>
      tags.%:                           "3"
      tags.Environment:                 "non-prod"
      tags.Name:                        "vpc-non-prod"
      tags.Owner:                       "arlindo santos"

  + module.vpc.aws_vpc_endpoint.dynamodb
      id:                               <computed>
      cidr_blocks.#:                    <computed>
      dns_entry.#:                      <computed>
      network_interface_ids.#:          <computed>
      policy:                           <computed>
      prefix_list_id:                   <computed>
      private_dns_enabled:              "false"
      route_table_ids.#:                <computed>
      security_group_ids.#:             <computed>
      service_name:                     "com.amazonaws.us-east-1.dynamodb"
      state:                            <computed>
      subnet_ids.#:                     <computed>
      vpc_endpoint_type:                "Gateway"
      vpc_id:                           "${aws_vpc.this.id}"

  + module.vpc.aws_vpc_endpoint.s3
      id:                               <computed>
      cidr_blocks.#:                    <computed>
      dns_entry.#:                      <computed>
      network_interface_ids.#:          <computed>
      policy:                           <computed>
      prefix_list_id:                   <computed>
      private_dns_enabled:              "false"
      route_table_ids.#:                <computed>
      security_group_ids.#:             <computed>
      service_name:                     "com.amazonaws.us-east-1.s3"
      state:                            <computed>
      subnet_ids.#:                     <computed>
      vpc_endpoint_type:                "Gateway"
      vpc_id:                           "${aws_vpc.this.id}"

  + module.vpc.aws_vpc_endpoint_route_table_association.private_dynamodb[0]
      id:                               <computed>
      route_table_id:                   "${element(aws_route_table.private.*.id, count.index)}"
      vpc_endpoint_id:                  "${aws_vpc_endpoint.dynamodb.id}"

  + module.vpc.aws_vpc_endpoint_route_table_association.private_dynamodb[1]
      id:                               <computed>
      route_table_id:                   "${element(aws_route_table.private.*.id, count.index)}"
      vpc_endpoint_id:                  "${aws_vpc_endpoint.dynamodb.id}"

  + module.vpc.aws_vpc_endpoint_route_table_association.private_s3[0]
      id:                               <computed>
      route_table_id:                   "${element(aws_route_table.private.*.id, count.index)}"
      vpc_endpoint_id:                  "${aws_vpc_endpoint.s3.id}"

  + module.vpc.aws_vpc_endpoint_route_table_association.private_s3[1]
      id:                               <computed>
      route_table_id:                   "${element(aws_route_table.private.*.id, count.index)}"
      vpc_endpoint_id:                  "${aws_vpc_endpoint.s3.id}"

  + module.vpc.aws_vpc_endpoint_route_table_association.public_dynamodb
      id:                               <computed>
      route_table_id:                   "${aws_route_table.public.id}"
      vpc_endpoint_id:                  "${aws_vpc_endpoint.dynamodb.id}"

  + module.vpc.aws_vpc_endpoint_route_table_association.public_s3
      id:                               <computed>
      route_table_id:                   "${aws_route_table.public.id}"
      vpc_endpoint_id:                  "${aws_vpc_endpoint.s3.id}"
Plan: 28 to add, 0 to change, 0 to destroy.

------------------------------------------------------------------------

This plan was saved to: ./plan.out

To perform exactly these actions, run the following command to apply:
    terraform apply "./plan.out"

Releasing state lock. This may take a few moments...
