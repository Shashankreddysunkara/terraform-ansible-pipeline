Refreshing Terraform state in-memory prior to plan...
The refreshed state will be used to calculate this plan, but will not be
persisted to local or remote state storage.

data.aws_vpc_endpoint_service.s3: Refreshing state...
data.aws_ami.amazon_linux: Refreshing state...
data.aws_vpc_endpoint_service.dynamodb: Refreshing state...

------------------------------------------------------------------------

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

+ module.autoscaling.aws_autoscaling_group.this
      id:                                              <computed>
      arn:                                             <computed>
      availability_zones.#:                            <computed>
      default_cooldown:                                "300"
      desired_capacity:                                "1"
      enabled_metrics.#:                               "8"
      enabled_metrics.119681000:                       "GroupStandbyInstances"
      enabled_metrics.1940933563:                      "GroupTotalInstances"
      enabled_metrics.308948767:                       "GroupPendingInstances"
      enabled_metrics.3267518000:                      "GroupTerminatingInstances"
      enabled_metrics.3394537085:                      "GroupDesiredCapacity"
      enabled_metrics.3551801763:                      "GroupInServiceInstances"
      enabled_metrics.4118539418:                      "GroupMinSize"
      enabled_metrics.4136111317:                      "GroupMaxSize"
      force_delete:                                    "false"
      health_check_grace_period:                       "300"
      health_check_type:                               "EC2"
      launch_configuration:                            "${var.create_lc ? element(aws_launch_configuration.this.*.name, 0) : var.launch_configuration}"
      load_balancers.#:                                <computed>
      max_size:                                        "1"
      metrics_granularity:                             "1Minute"
      min_elb_capacity:                                "0"
      min_size:                                        "0"
      name:                                            <computed>
      name_prefix:                                     "stage-app1-asg-"
      protect_from_scale_in:                           "false"
      service_linked_role_arn:                         <computed>
      tags.#:                                          "3"
      tags.0.%:                                        "3"
      tags.0.key:                                      "Name"
      tags.0.propagate_at_launch:                      "1"
      tags.0.value:                                    "stage-app1-webserver"
      tags.1.%:                                        "3"
      tags.1.key:                                      "Environment"
      tags.1.propagate_at_launch:                      "1"
      tags.1.value:                                    "stage"
      tags.2.%:                                        "3"
      tags.2.key:                                      "owner"
      tags.2.propagate_at_launch:                      "1"
      tags.2.value:                                    "arlindo santos"
      termination_policies.#:                          "1"
      termination_policies.0:                          "Default"
      vpc_zone_identifier.#:                           <computed>
      wait_for_capacity_timeout:                       "0"
      wait_for_elb_capacity:                           "0"

  + module.autoscaling.aws_launch_configuration.this
      id:                                              <computed>
      associate_public_ip_address:                     "false"
      ebs_block_device.#:                              "1"
      ebs_block_device.80656132.delete_on_termination: "true"
      ebs_block_device.80656132.device_name:           "/dev/xvdz"
      ebs_block_device.80656132.encrypted:             <computed>
      ebs_block_device.80656132.iops:                  <computed>
      ebs_block_device.80656132.no_device:             ""
      ebs_block_device.80656132.snapshot_id:           <computed>
      ebs_block_device.80656132.volume_size:           "20"
      ebs_block_device.80656132.volume_type:           "gp2"
      ebs_optimized:                                   "false"
      enable_monitoring:                               "true"
      image_id:                                        "ami-467ca739"
      instance_type:                                   "t2.micro"
      key_name:                                        "ansible"
      name:                                            <computed>
      name_prefix:                                     "stage-app1-lc-"
      placement_tenancy:                               "default"
      root_block_device.#:                             "1"
      root_block_device.0.delete_on_termination:       "true"
      root_block_device.0.iops:                        <computed>
      root_block_device.0.volume_size:                 "20"
      root_block_device.0.volume_type:                 "gp2"
      security_groups.#:                               <computed>
      user_data:                                       "4504094e2e2a4c485cfcfb260d71cb9c064760e7"

  + module.ec2-instance.aws_instance.this
      id:                                              <computed>
      ami:                                             "ami-467ca739"
      associate_public_ip_address:                     "true"
      availability_zone:                               <computed>
      disable_api_termination:                         "false"
      ebs_optimized:                                   "false"
      get_password_data:                               "false"
      instance_state:                                  <computed>
      instance_type:                                   "t2.micro"
      ipv6_address_count:                              "0"
      key_name:                                        "ansible"
      monitoring:                                      "false"
      network_interface.#:                             <computed>
      network_interface_id:                            <computed>
      password_data:                                   <computed>
      placement_group:                                 <computed>
      primary_network_interface_id:                    <computed>
      private_dns:                                     <computed>
      private_ip:                                      <computed>
      public_dns:                                      <computed>
      public_ip:                                       <computed>
      security_groups.#:                               <computed>
      source_dest_check:                               "true"
      subnet_id:                                       "${var.subnet_id}"
      tags.%:                                          "1"
      tags.Name:                                       "stage-app1-bastion"
      tenancy:                                         "default"
      user_data:                                       "da39a3ee5e6b4b0d3255bfef95601890afd80709"
      volume_tags.%:                                   <computed>
      vpc_security_group_ids.#:                        <computed>

  + module.security-group-app.aws_security_group.this
      id:                                              <computed>
      arn:                                             <computed>
      description:                                     "Security Group managed by Terraform"
      egress.#:                                        <computed>
      ingress.#:                                       <computed>
      name:                                            "stage-app1-app-sg"
      owner_id:                                        <computed>
      revoke_rules_on_delete:                          "false"
      tags.%:                                          "3"
      tags.Environment:                                "stage"
      tags.Name:                                       "stage-app1-app-sg"
      tags.Owner:                                      "arlindo santos"
      vpc_id:                                          "${var.vpc_id}"

  + module.security-group-app.aws_security_group_rule.egress_rules
      id:                                              <computed>
      cidr_blocks.#:                                   "1"
      cidr_blocks.0:                                   "0.0.0.0/0"
      description:                                     "All protocols"
      from_port:                                       "-1"
      ipv6_cidr_blocks.#:                              "1"
      ipv6_cidr_blocks.0:                              "::/0"
      protocol:                                        "-1"
      security_group_id:                               "${aws_security_group.this.id}"
      self:                                            "false"
      source_security_group_id:                        <computed>
      to_port:                                         "-1"
      type:                                            "egress"

  + module.security-group-app.aws_security_group_rule.ingress_with_cidr_blocks[0]
      id:                                              <computed>
      cidr_blocks.#:                                   "1"
      cidr_blocks.0:                                   "0.0.0.0/0"
      description:                                     "Ingress Rule"
      from_port:                                       "80"
      protocol:                                        "tcp"
      security_group_id:                               "${aws_security_group.this.id}"
      self:                                            "false"
      source_security_group_id:                        <computed>
      to_port:                                         "80"
      type:                                            "ingress"

  + module.security-group-app.aws_security_group_rule.ingress_with_cidr_blocks[1]
      id:                                              <computed>
      cidr_blocks.#:                                   "1"
      cidr_blocks.0:                                   "0.0.0.0/0"
      description:                                     "Ingress Rule"
      from_port:                                       "22"
      protocol:                                        "tcp"
      security_group_id:                               "${aws_security_group.this.id}"
      self:                                            "false"
      source_security_group_id:                        <computed>
      to_port:                                         "22"
      type:                                            "ingress"

  + module.security-group-elb.aws_security_group.this
      id:                                              <computed>
      arn:                                             <computed>
      description:                                     "Security Group managed by Terraform"
      egress.#:                                        <computed>
      ingress.#:                                       <computed>
      name:                                            "stage-app1-elb-sg"
      owner_id:                                        <computed>
      revoke_rules_on_delete:                          "false"
      tags.%:                                          "3"
      tags.Environment:                                "stage"
      tags.Name:                                       "stage-app1-elb-sg"
      tags.Owner:                                      "arlindo santos"
      vpc_id:                                          "${var.vpc_id}"

  + module.security-group-elb.aws_security_group_rule.egress_rules
      id:                                              <computed>
      cidr_blocks.#:                                   "1"
      cidr_blocks.0:                                   "0.0.0.0/0"
      description:                                     "All protocols"
      from_port:                                       "-1"
      ipv6_cidr_blocks.#:                              "1"
      ipv6_cidr_blocks.0:                              "::/0"
      protocol:                                        "-1"
      security_group_id:                               "${aws_security_group.this.id}"
      self:                                            "false"
      source_security_group_id:                        <computed>
      to_port:                                         "-1"
      type:                                            "egress"

  + module.security-group-elb.aws_security_group_rule.ingress_with_cidr_blocks
      id:                                              <computed>
      cidr_blocks.#:                                   "1"
      cidr_blocks.0:                                   "0.0.0.0/0"
      description:                                     "Ingress Rule"
      from_port:                                       "80"
      protocol:                                        "tcp"
      security_group_id:                               "${aws_security_group.this.id}"
      self:                                            "false"
      source_security_group_id:                        <computed>
      to_port:                                         "80"
      type:                                            "ingress"

  + module.security-group-mysql.aws_security_group.this
      id:                                              <computed>
      arn:                                             <computed>
      description:                                     "Security Group managed by Terraform"
      egress.#:                                        <computed>
      ingress.#:                                       <computed>
      name:                                            "stage-app1-mysql-sg"
      owner_id:                                        <computed>
      revoke_rules_on_delete:                          "false"
      tags.%:                                          "3"
      tags.Environment:                                "stage"
      tags.Name:                                       "stage-app1-mysql-sg"
      tags.Owner:                                      "arlindo santos"
      vpc_id:                                          "${var.vpc_id}"

  + module.security-group-mysql.aws_security_group_rule.egress_rules
      id:                                              <computed>
      cidr_blocks.#:                                   "1"
      cidr_blocks.0:                                   "0.0.0.0/0"
      description:                                     "All protocols"
      from_port:                                       "-1"
      ipv6_cidr_blocks.#:                              "1"
      ipv6_cidr_blocks.0:                              "::/0"
      protocol:                                        "-1"
      security_group_id:                               "${aws_security_group.this.id}"
      self:                                            "false"
      source_security_group_id:                        <computed>
      to_port:                                         "-1"
      type:                                            "egress"

  + module.security-group-mysql.aws_security_group_rule.ingress_with_cidr_blocks
      id:                                              <computed>
      cidr_blocks.#:                                   "1"
      cidr_blocks.0:                                   "0.0.0.0/0"
      description:                                     "Ingress Rule"
      from_port:                                       "3306"
      protocol:                                        "tcp"
      security_group_id:                               "${aws_security_group.this.id}"
      self:                                            "false"
      source_security_group_id:                        <computed>
      to_port:                                         "3306"
      type:                                            "ingress"

  + module.security-group-ssh.aws_security_group.this
      id:                                              <computed>
      arn:                                             <computed>
      description:                                     "Security Group managed by Terraform"
      egress.#:                                        <computed>
      ingress.#:                                       <computed>
      name:                                            "stage-app1-ssh-sg"
      owner_id:                                        <computed>
      revoke_rules_on_delete:                          "false"
      tags.%:                                          "3"
      tags.Environment:                                "stage"
      tags.Name:                                       "stage-app1-ssh-sg"
      tags.Owner:                                      "arlindo santos"
      vpc_id:                                          "${var.vpc_id}"

  + module.security-group-ssh.aws_security_group_rule.egress_rules
      id:                                              <computed>
      cidr_blocks.#:                                   "1"
      cidr_blocks.0:                                   "0.0.0.0/0"
      description:                                     "All protocols"
      from_port:                                       "-1"
      ipv6_cidr_blocks.#:                              "1"
      ipv6_cidr_blocks.0:                              "::/0"
      protocol:                                        "-1"
      security_group_id:                               "${aws_security_group.this.id}"
      self:                                            "false"
      source_security_group_id:                        <computed>
      to_port:                                         "-1"
      type:                                            "egress"

  + module.security-group-ssh.aws_security_group_rule.ingress_with_cidr_blocks
      id:                                              <computed>
      cidr_blocks.#:                                   "1"
      cidr_blocks.0:                                   "0.0.0.0/0"
      description:                                     "Ingress Rule"
      from_port:                                       "22"
      protocol:                                        "tcp"
      security_group_id:                               "${aws_security_group.this.id}"
      self:                                            "false"
      source_security_group_id:                        <computed>
      to_port:                                         "22"
      type:                                            "ingress"

  + module.vpc.aws_eip.nat[0]
      id:                                              <computed>
      allocation_id:                                   <computed>
      association_id:                                  <computed>
      domain:                                          <computed>
      instance:                                        <computed>
      network_interface:                               <computed>
      private_ip:                                      <computed>
      public_ip:                                       <computed>
      tags.%:                                          "3"
      tags.Environment:                                "stage"
      tags.Name:                                       "vpc-stage-us-east-1a"
      tags.Owner:                                      "arlindo santos"
      vpc:                                             "true"

  + module.vpc.aws_eip.nat[1]
      id:                                              <computed>
      allocation_id:                                   <computed>
      association_id:                                  <computed>
      domain:                                          <computed>
      instance:                                        <computed>
      network_interface:                               <computed>
      private_ip:                                      <computed>
      public_ip:                                       <computed>
      tags.%:                                          "3"
      tags.Environment:                                "stage"
      tags.Name:                                       "vpc-stage-us-east-1b"
      tags.Owner:                                      "arlindo santos"
      vpc:                                             "true"

  + module.vpc.aws_internet_gateway.this
      id:                                              <computed>
      tags.%:                                          "3"
      tags.Environment:                                "stage"
      tags.Name:                                       "vpc-stage"
      tags.Owner:                                      "arlindo santos"
      vpc_id:                                          "${aws_vpc.this.id}"

  + module.vpc.aws_nat_gateway.this[0]
      id:                                              <computed>
      allocation_id:                                   "${element(local.nat_gateway_ips, (var.single_nat_gateway ? 0 : count.index))}"
      network_interface_id:                            <computed>
      private_ip:                                      <computed>
      public_ip:                                       <computed>
      subnet_id:                                       "${element(aws_subnet.public.*.id, (var.single_nat_gateway ? 0 : count.index))}"
      tags.%:                                          "3"
      tags.Environment:                                "stage"
      tags.Name:                                       "vpc-stage-us-east-1a"
      tags.Owner:                                      "arlindo santos"

  + module.vpc.aws_nat_gateway.this[1]
      id:                                              <computed>
      allocation_id:                                   "${element(local.nat_gateway_ips, (var.single_nat_gateway ? 0 : count.index))}"
      network_interface_id:                            <computed>
      private_ip:                                      <computed>
      public_ip:                                       <computed>
      subnet_id:                                       "${element(aws_subnet.public.*.id, (var.single_nat_gateway ? 0 : count.index))}"
      tags.%:                                          "3"
      tags.Environment:                                "stage"
      tags.Name:                                       "vpc-stage-us-east-1b"
      tags.Owner:                                      "arlindo santos"

  + module.vpc.aws_route.private_nat_gateway[0]
      id:                                              <computed>
      destination_cidr_block:                          "0.0.0.0/0"
      destination_prefix_list_id:                      <computed>
      egress_only_gateway_id:                          <computed>
      gateway_id:                                      <computed>
      instance_id:                                     <computed>
      instance_owner_id:                               <computed>
      nat_gateway_id:                                  "${element(aws_nat_gateway.this.*.id, count.index)}"
      network_interface_id:                            <computed>
      origin:                                          <computed>
      route_table_id:                                  "${element(aws_route_table.private.*.id, count.index)}"
      state:                                           <computed>

  + module.vpc.aws_route.private_nat_gateway[1]
      id:                                              <computed>
      destination_cidr_block:                          "0.0.0.0/0"
      destination_prefix_list_id:                      <computed>
      egress_only_gateway_id:                          <computed>
      gateway_id:                                      <computed>
      instance_id:                                     <computed>
      instance_owner_id:                               <computed>
      nat_gateway_id:                                  "${element(aws_nat_gateway.this.*.id, count.index)}"
      network_interface_id:                            <computed>
      origin:                                          <computed>
      route_table_id:                                  "${element(aws_route_table.private.*.id, count.index)}"
      state:                                           <computed>

  + module.vpc.aws_route.public_internet_gateway
      id:                                              <computed>
      destination_cidr_block:                          "0.0.0.0/0"
      destination_prefix_list_id:                      <computed>
      egress_only_gateway_id:                          <computed>
      gateway_id:                                      "${aws_internet_gateway.this.id}"
      instance_id:                                     <computed>
      instance_owner_id:                               <computed>
      nat_gateway_id:                                  <computed>
      network_interface_id:                            <computed>
      origin:                                          <computed>
      route_table_id:                                  "${aws_route_table.public.id}"
      state:                                           <computed>

  + module.vpc.aws_route_table.private[0]
      id:                                              <computed>
      propagating_vgws.#:                              <computed>
      route.#:                                         <computed>
      tags.%:                                          "3"
      tags.Environment:                                "stage"
      tags.Name:                                       "vpc-stage-private-us-east-1a"
      tags.Owner:                                      "arlindo santos"
      vpc_id:                                          "${aws_vpc.this.id}"

  + module.vpc.aws_route_table.private[1]
      id:                                              <computed>
      propagating_vgws.#:                              <computed>
      route.#:                                         <computed>
      tags.%:                                          "3"
      tags.Environment:                                "stage"
      tags.Name:                                       "vpc-stage-private-us-east-1b"
      tags.Owner:                                      "arlindo santos"
      vpc_id:                                          "${aws_vpc.this.id}"

  + module.vpc.aws_route_table.public
      id:                                              <computed>
      propagating_vgws.#:                              <computed>
      route.#:                                         <computed>
      tags.%:                                          "3"
      tags.Environment:                                "stage"
      tags.Name:                                       "vpc-stage-public"
      tags.Owner:                                      "arlindo santos"
      vpc_id:                                          "${aws_vpc.this.id}"

  + module.vpc.aws_route_table_association.private[0]
      id:                                              <computed>
      route_table_id:                                  "${element(aws_route_table.private.*.id, (var.single_nat_gateway ? 0 : count.index))}"
      subnet_id:                                       "${element(aws_subnet.private.*.id, count.index)}"

  + module.vpc.aws_route_table_association.private[1]
      id:                                              <computed>
      route_table_id:                                  "${element(aws_route_table.private.*.id, (var.single_nat_gateway ? 0 : count.index))}"
      subnet_id:                                       "${element(aws_subnet.private.*.id, count.index)}"

  + module.vpc.aws_route_table_association.public[0]
      id:                                              <computed>
      route_table_id:                                  "${aws_route_table.public.id}"
      subnet_id:                                       "${element(aws_subnet.public.*.id, count.index)}"

  + module.vpc.aws_route_table_association.public[1]
      id:                                              <computed>
      route_table_id:                                  "${aws_route_table.public.id}"
      subnet_id:                                       "${element(aws_subnet.public.*.id, count.index)}"

  + module.vpc.aws_subnet.private[0]
      id:                                              <computed>
      assign_ipv6_address_on_creation:                 "false"
      availability_zone:                               "us-east-1a"
      cidr_block:                                      "10.10.1.0/24"
      ipv6_cidr_block:                                 <computed>
      ipv6_cidr_block_association_id:                  <computed>
      map_public_ip_on_launch:                         "false"
      tags.%:                                          "3"
      tags.Environment:                                "stage"
      tags.Name:                                       "vpc-stage-private-us-east-1a"
      tags.Owner:                                      "arlindo santos"
      vpc_id:                                          "${aws_vpc.this.id}"

  + module.vpc.aws_subnet.private[1]
      id:                                              <computed>
      assign_ipv6_address_on_creation:                 "false"
      availability_zone:                               "us-east-1b"
      cidr_block:                                      "10.10.2.0/24"
      ipv6_cidr_block:                                 <computed>
      ipv6_cidr_block_association_id:                  <computed>
      map_public_ip_on_launch:                         "false"
      tags.%:                                          "3"
      tags.Environment:                                "stage"
      tags.Name:                                       "vpc-stage-private-us-east-1b"
      tags.Owner:                                      "arlindo santos"
      vpc_id:                                          "${aws_vpc.this.id}"

  + module.vpc.aws_subnet.public[0]
      id:                                              <computed>
      assign_ipv6_address_on_creation:                 "false"
      availability_zone:                               "us-east-1a"
      cidr_block:                                      "10.10.11.0/24"
      ipv6_cidr_block:                                 <computed>
      ipv6_cidr_block_association_id:                  <computed>
      map_public_ip_on_launch:                         "true"
      tags.%:                                          "3"
      tags.Environment:                                "stage"
      tags.Name:                                       "vpc-stage-public-us-east-1a"
      tags.Owner:                                      "arlindo santos"
      vpc_id:                                          "${aws_vpc.this.id}"

  + module.vpc.aws_subnet.public[1]
      id:                                              <computed>
      assign_ipv6_address_on_creation:                 "false"
      availability_zone:                               "us-east-1b"
      cidr_block:                                      "10.10.12.0/24"
      ipv6_cidr_block:                                 <computed>
      ipv6_cidr_block_association_id:                  <computed>
      map_public_ip_on_launch:                         "true"
      tags.%:                                          "3"
      tags.Environment:                                "stage"
      tags.Name:                                       "vpc-stage-public-us-east-1b"
      tags.Owner:                                      "arlindo santos"
      vpc_id:                                          "${aws_vpc.this.id}"

  + module.vpc.aws_vpc.this
      id:                                              <computed>
      assign_generated_ipv6_cidr_block:                "false"
      cidr_block:                                      "10.10.0.0/16"
      default_network_acl_id:                          <computed>
      default_route_table_id:                          <computed>
      default_security_group_id:                       <computed>
      dhcp_options_id:                                 <computed>
      enable_classiclink:                              <computed>
      enable_classiclink_dns_support:                  <computed>
      enable_dns_hostnames:                            "false"
      enable_dns_support:                              "true"
      instance_tenancy:                                "default"
      ipv6_association_id:                             <computed>
      ipv6_cidr_block:                                 <computed>
      main_route_table_id:                             <computed>
      tags.%:                                          "3"
      tags.Environment:                                "stage"
      tags.Name:                                       "vpc-stage"
      tags.Owner:                                      "arlindo santos"

  + module.vpc.aws_vpc_endpoint.dynamodb
      id:                                              <computed>
      cidr_blocks.#:                                   <computed>
      dns_entry.#:                                     <computed>
      network_interface_ids.#:                         <computed>
      policy:                                          <computed>
      prefix_list_id:                                  <computed>
      private_dns_enabled:                             "false"
      route_table_ids.#:                               <computed>
      security_group_ids.#:                            <computed>
      service_name:                                    "com.amazonaws.us-east-1.dynamodb"
      state:                                           <computed>
      subnet_ids.#:                                    <computed>
      vpc_endpoint_type:                               "Gateway"
      vpc_id:                                          "${aws_vpc.this.id}"

  + module.vpc.aws_vpc_endpoint.s3
      id:                                              <computed>
      cidr_blocks.#:                                   <computed>
      dns_entry.#:                                     <computed>
      network_interface_ids.#:                         <computed>
      policy:                                          <computed>
      prefix_list_id:                                  <computed>
      private_dns_enabled:                             "false"
      route_table_ids.#:                               <computed>
      security_group_ids.#:                            <computed>
      service_name:                                    "com.amazonaws.us-east-1.s3"
      state:                                           <computed>
      subnet_ids.#:                                    <computed>
      vpc_endpoint_type:                               "Gateway"
      vpc_id:                                          "${aws_vpc.this.id}"

  + module.vpc.aws_vpc_endpoint_route_table_association.private_dynamodb[0]
      id:                                              <computed>
      route_table_id:                                  "${element(aws_route_table.private.*.id, count.index)}"
      vpc_endpoint_id:                                 "${aws_vpc_endpoint.dynamodb.id}"

  + module.vpc.aws_vpc_endpoint_route_table_association.private_dynamodb[1]
      id:                                              <computed>
      route_table_id:                                  "${element(aws_route_table.private.*.id, count.index)}"
      vpc_endpoint_id:                                 "${aws_vpc_endpoint.dynamodb.id}"

  + module.vpc.aws_vpc_endpoint_route_table_association.private_s3[0]
      id:                                              <computed>
      route_table_id:                                  "${element(aws_route_table.private.*.id, count.index)}"
      vpc_endpoint_id:                                 "${aws_vpc_endpoint.s3.id}"

  + module.vpc.aws_vpc_endpoint_route_table_association.private_s3[1]
      id:                                              <computed>
      route_table_id:                                  "${element(aws_route_table.private.*.id, count.index)}"
      vpc_endpoint_id:                                 "${aws_vpc_endpoint.s3.id}"

  + module.vpc.aws_vpc_endpoint_route_table_association.public_dynamodb
      id:                                              <computed>
      route_table_id:                                  "${aws_route_table.public.id}"
      vpc_endpoint_id:                                 "${aws_vpc_endpoint.dynamodb.id}"

  + module.vpc.aws_vpc_endpoint_route_table_association.public_s3
      id:                                              <computed>
      route_table_id:                                  "${aws_route_table.public.id}"
      vpc_endpoint_id:                                 "${aws_vpc_endpoint.s3.id}"

  + module.db.module.db_instance.aws_db_instance.this
      id:                                              <computed>
      address:                                         <computed>
      allocated_storage:                               "5"
      allow_major_version_upgrade:                     "false"
      apply_immediately:                               "false"
      arn:                                             <computed>
      auto_minor_version_upgrade:                      "true"
      availability_zone:                               <computed>
      backup_retention_period:                         "0"
      backup_window:                                   "03:00-06:00"
      ca_cert_identifier:                              <computed>
      character_set_name:                              <computed>
      copy_tags_to_snapshot:                           "false"
      db_subnet_group_name:                            "${var.db_subnet_group_name}"
      endpoint:                                        <computed>
      engine:                                          "mysql"
      engine_version:                                  "5.7.19"
      final_snapshot_identifier:                       "stage-app1-mysql-dbinstance1"
      hosted_zone_id:                                  <computed>
      iam_database_authentication_enabled:             "false"
      identifier:                                      "stage-app1-mysql-dbinstance1"
      identifier_prefix:                               <computed>
      instance_class:                                  "db.t2.large"
      iops:                                            "0"
      kms_key_id:                                      <computed>
      license_model:                                   <computed>
      maintenance_window:                              "mon:00:00-mon:03:00"
      monitoring_interval:                             "0"
      monitoring_role_arn:                             <computed>
      multi_az:                                        "false"
      name:                                            "stage_app1_mysql_dbinstance1"
      option_group_name:                               <computed>
      parameter_group_name:                            "${var.parameter_group_name}"
      password:                                        <sensitive>
      port:                                            "3306"
      publicly_accessible:                             "false"
      replicas.#:                                      <computed>
      resource_id:                                     <computed>
      skip_final_snapshot:                             "true"
      status:                                          <computed>
      storage_encrypted:                               "false"
      storage_type:                                    "gp2"
      tags.%:                                          "3"
      tags.Environment:                                "stage"
      tags.Name:                                       "stage-app1-mysql-dbinstance1"
      tags.Owner:                                      "arlindo santos"
      timezone:                                        <computed>
      username:                                        "dbuser1"
      vpc_security_group_ids.#:                        <computed>

  + module.db.module.db_parameter_group.aws_db_parameter_group.this
      id:                                              <computed>
      arn:                                             <computed>
      description:                                     "Database parameter group for stage-app1-mysql-dbinstance1"
      family:                                          "mysql5.7"
      name:                                            <computed>
      name_prefix:                                     "stage-app1-mysql-dbinstance1-"
      tags.%:                                          "3"
      tags.Environment:                                "stage"
      tags.Name:                                       "stage-app1-mysql-dbinstance1"
      tags.Owner:                                      "arlindo santos"

  + module.db.module.db_subnet_group.aws_db_subnet_group.this
      id:                                              <computed>
      arn:                                             <computed>
      description:                                     "Database subnet group for stage-app1-mysql-dbinstance1"
      name:                                            <computed>
      name_prefix:                                     "stage-app1-mysql-dbinstance1-"
      subnet_ids.#:                                    <computed>
      tags.%:                                          "3"
      tags.Environment:                                "stage"
      tags.Name:                                       "stage-app1-mysql-dbinstance1"
      tags.Owner:                                      "arlindo santos"

  + module.elb.module.elb.aws_elb.this
      id:                                              <computed>
      arn:                                             <computed>
      availability_zones.#:                            <computed>
      connection_draining:                             "false"
      connection_draining_timeout:                     "300"
      cross_zone_load_balancing:                       "true"
      dns_name:                                        <computed>
      health_check.#:                                  "1"
      health_check.0.healthy_threshold:                "2"
      health_check.0.interval:                         "30"
      health_check.0.target:                           "HTTP:80/"
      health_check.0.timeout:                          "5"
      health_check.0.unhealthy_threshold:              "2"
      idle_timeout:                                    "60"
      instances.#:                                     <computed>
      internal:                                        "false"
      listener.#:                                      "1"
      listener.3057123346.instance_port:               "80"
      listener.3057123346.instance_protocol:           "HTTP"
      listener.3057123346.lb_port:                     "80"
      listener.3057123346.lb_protocol:                 "HTTP"
      listener.3057123346.ssl_certificate_id:          ""
      name:                                            "stage-app1-elb"
      security_groups.#:                               <computed>
      source_security_group:                           <computed>
      source_security_group_id:                        <computed>
      subnets.#:                                       <computed>
      tags.%:                                          "3"
      tags.Environment:                                "stage"
      tags.Name:                                       "stage-app1-elb"
      tags.Owner:                                      "arlindo santos"
      zone_id:                                         <computed>
Plan: 48 to add, 0 to change, 0 to destroy.

------------------------------------------------------------------------

This plan was saved to: ./plan.out

To perform exactly these actions, run the following command to apply:
    terraform apply "./plan.out"

Releasing state lock. This may take a few moments...
